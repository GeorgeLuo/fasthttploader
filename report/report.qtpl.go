// Code generated by qtc from "report.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line report/report.qtpl:1
package report

//line report/report.qtpl:1
import (
	"sort"
	"strings"
	"sync"
)

//line report/report.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line report/report.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line report/report.qtpl:8
type Page struct {
	// Title displayed in title of generated report
	Title string

	// Step is measured in ms and used for TickInterval in charts
	Interval float64

	sync.Mutex
	Connections       []uint64
	RequestSum        []uint64
	RequestSuccess    []uint64
	Errors            []uint64
	Timeouts          []uint64
	Qps               []uint64
	BytesWritten      []uint64
	BytesRead         []uint64
	RequestDuration   map[float64][]float64
	StatusCodes       map[string]float64
	ErrorMessages     map[string]int
	HasHeaders        []uint64
	BodySizeHistogram map[float64][]float64
}

type seriesFunc func() string

//line report/report.qtpl:34
func (p *Page) streamtitle(qw422016 *qt422016.Writer) {
//line report/report.qtpl:34
	qw422016.E().S(p.Title)
//line report/report.qtpl:34
}

//line report/report.qtpl:34
func (p *Page) writetitle(qq422016 qtio422016.Writer) {
//line report/report.qtpl:34
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:34
	p.streamtitle(qw422016)
//line report/report.qtpl:34
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:34
}

//line report/report.qtpl:34
func (p *Page) title() string {
//line report/report.qtpl:34
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:34
	p.writetitle(qb422016)
//line report/report.qtpl:34
	qs422016 := string(qb422016.B)
//line report/report.qtpl:34
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:34
	return qs422016
//line report/report.qtpl:34
}

//line report/report.qtpl:36
func (p *Page) StreamUpdateRequestDuration(qw422016 *qt422016.Writer, d map[float64]float64) {
//line report/report.qtpl:36
	qw422016.N().S(`
	`)
//line report/report.qtpl:38
	for k, v := range d {
		if _, ok := p.RequestDuration[k]; !ok {
			p.RequestDuration[k] = make([]float64, 0)
		}

		p.RequestDuration[k] = append(p.RequestDuration[k], v)
	}

//line report/report.qtpl:45
	qw422016.N().S(`
`)
//line report/report.qtpl:46
}

//line report/report.qtpl:46
func (p *Page) WriteUpdateRequestDuration(qq422016 qtio422016.Writer, d map[float64]float64) {
//line report/report.qtpl:46
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:46
	p.StreamUpdateRequestDuration(qw422016, d)
//line report/report.qtpl:46
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:46
}

//line report/report.qtpl:46
func (p *Page) UpdateRequestDuration(d map[float64]float64) string {
//line report/report.qtpl:46
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:46
	p.WriteUpdateRequestDuration(qb422016, d)
//line report/report.qtpl:46
	qs422016 := string(qb422016.B)
//line report/report.qtpl:46
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:46
	return qs422016
//line report/report.qtpl:46
}

//line report/report.qtpl:48
func (p *Page) StreamUpdateBodySizeHistogram(qw422016 *qt422016.Writer, d map[float64]float64) {
//line report/report.qtpl:48
	qw422016.N().S(`
	`)
//line report/report.qtpl:50
	for k, v := range d {
		if _, ok := p.BodySizeHistogram[k]; !ok {
			p.BodySizeHistogram[k] = make([]float64, 0)
		}

		p.BodySizeHistogram[k] = append(p.BodySizeHistogram[k], v)
	}

//line report/report.qtpl:57
	qw422016.N().S(`
`)
//line report/report.qtpl:58
}

//line report/report.qtpl:58
func (p *Page) WriteUpdateBodySizeHistogram(qq422016 qtio422016.Writer, d map[float64]float64) {
//line report/report.qtpl:58
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:58
	p.StreamUpdateBodySizeHistogram(qw422016, d)
//line report/report.qtpl:58
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:58
}

//line report/report.qtpl:58
func (p *Page) UpdateBodySizeHistogram(d map[float64]float64) string {
//line report/report.qtpl:58
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:58
	p.WriteUpdateBodySizeHistogram(qb422016, d)
//line report/report.qtpl:58
	qs422016 := string(qb422016.B)
//line report/report.qtpl:58
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:58
	return qs422016
//line report/report.qtpl:58
}

//line report/report.qtpl:60
func StreamPrintPage(qw422016 *qt422016.Writer, p *Page) {
//line report/report.qtpl:60
	qw422016.N().S(`
<html>
	<head>
		<title>`)
//line report/report.qtpl:63
	p.streamtitle(qw422016)
//line report/report.qtpl:63
	qw422016.N().S(`</title>
		<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
		<script type="text/javascript" src="https://code.highcharts.com/highcharts.js"></script>
		<script type="text/javascript" src="https://code.highcharts.com/modules/exporting.js"></script>
		<script type="text/javascript">`)
//line report/report.qtpl:67
	qw422016.N().Z(MustAsset("report/static/js/utils.js"))
//line report/report.qtpl:67
	qw422016.N().S(`</script>
		<style>`)
//line report/report.qtpl:68
	qw422016.N().Z(MustAsset("report/static/css/main.css"))
//line report/report.qtpl:68
	qw422016.N().S(`</style>
	</head>
	 <body>
	 	`)
//line report/report.qtpl:71
	p.streamsimpleChart(qw422016, "hasHeaders", p.hasHeadersSeries)
//line report/report.qtpl:71
	qw422016.N().S(`
	 	`)
//line report/report.qtpl:72
	p.streamsimpleChart(qw422016, "connections", p.connectionSeries)
//line report/report.qtpl:72
	qw422016.N().S(`
		`)
//line report/report.qtpl:73
	p.streamsimpleChart(qw422016, "qps", p.qpsSeries)
//line report/report.qtpl:73
	qw422016.N().S(`
		`)
//line report/report.qtpl:74
	p.streamsimpleChart(qw422016, "errors-vs-timeouts", p.errorSeries)
//line report/report.qtpl:74
	qw422016.N().S(`
		`)
//line report/report.qtpl:75
	p.streamsimpleChart(qw422016, "latency", p.durationSeries)
//line report/report.qtpl:75
	qw422016.N().S(`
		`)
//line report/report.qtpl:76
	p.streambytesChart(qw422016, "written-vs-read", p.bytesSeries)
//line report/report.qtpl:76
	qw422016.N().S(`
		`)
//line report/report.qtpl:77
	p.streampieChart(qw422016, "status-codes", p.statusCodesSeries)
//line report/report.qtpl:77
	qw422016.N().S(`
		`)
//line report/report.qtpl:78
	p.streamerrorMessagesTable(qw422016)
//line report/report.qtpl:78
	qw422016.N().S(`
	</body>
</html>
`)
//line report/report.qtpl:81
}

//line report/report.qtpl:81
func WritePrintPage(qq422016 qtio422016.Writer, p *Page) {
//line report/report.qtpl:81
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:81
	StreamPrintPage(qw422016, p)
//line report/report.qtpl:81
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:81
}

//line report/report.qtpl:81
func PrintPage(p *Page) string {
//line report/report.qtpl:81
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:81
	WritePrintPage(qb422016, p)
//line report/report.qtpl:81
	qs422016 := string(qb422016.B)
//line report/report.qtpl:81
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:81
	return qs422016
//line report/report.qtpl:81
}

//line report/report.qtpl:83
func (p *Page) streamsimpleChart(qw422016 *qt422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:83
	qw422016.N().S(`
	<script>
	$(function () {
    			$('#`)
//line report/report.qtpl:86
	qw422016.N().S(title)
//line report/report.qtpl:86
	qw422016.N().S(`').highcharts({
					title: {
						text: '`)
//line report/report.qtpl:88
	qw422016.N().S(strings.Title(title))
//line report/report.qtpl:88
	qw422016.N().S(`',
						x: -20 //center
					},
					xAxis: {
						type: 'linear',
					},
					legend: {
						layout: 'vertical',
						align: 'right',
						verticalAlign: 'middle',
						borderWidth: 0
					},
					plotOptions: {
						series: {
							pointStart: 0,
							pointInterval: `)
//line report/report.qtpl:103
	qw422016.N().FPrec(p.Interval, 2)
//line report/report.qtpl:103
	qw422016.N().S(`,
						}
					},
					series: `)
//line report/report.qtpl:106
	qw422016.N().S(fn())
//line report/report.qtpl:106
	qw422016.N().S(`
				});
    		});
    </script>
   	<div id="`)
//line report/report.qtpl:110
	qw422016.N().S(title)
//line report/report.qtpl:110
	qw422016.N().S(`" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
`)
//line report/report.qtpl:111
}

//line report/report.qtpl:111
func (p *Page) writesimpleChart(qq422016 qtio422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:111
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:111
	p.streamsimpleChart(qw422016, title, fn)
//line report/report.qtpl:111
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:111
}

//line report/report.qtpl:111
func (p *Page) simpleChart(title string, fn seriesFunc) string {
//line report/report.qtpl:111
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:111
	p.writesimpleChart(qb422016, title, fn)
//line report/report.qtpl:111
	qs422016 := string(qb422016.B)
//line report/report.qtpl:111
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:111
	return qs422016
//line report/report.qtpl:111
}

//line report/report.qtpl:113
func (p *Page) streambytesChart(qw422016 *qt422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:113
	qw422016.N().S(`
	<script>
	$(function () {
    			$('#`)
//line report/report.qtpl:116
	qw422016.N().S(title)
//line report/report.qtpl:116
	qw422016.N().S(`').highcharts({
					title: {
						text: '`)
//line report/report.qtpl:118
	qw422016.N().S(strings.Title(title))
//line report/report.qtpl:118
	qw422016.N().S(`',
						x: -20 //center
					},
					xAxis: {
						type: 'linear',
					},
					yAxis: {
						labels: {
							formatter: function() { return bytes(this.value, true); }
						},
						min: 0,
					},
					tooltip: {
						enabled: true,
						formatter: function() { return bytes(this.y, true);}
					},
					legend: {
						layout: 'vertical',
						align: 'right',
						verticalAlign: 'middle',
						borderWidth: 0
					},
					plotOptions: {
						series: {
							pointStart: 0,
							pointInterval: `)
//line report/report.qtpl:143
	qw422016.N().FPrec(p.Interval, 2)
//line report/report.qtpl:143
	qw422016.N().S(`,
						}
					},
					series: `)
//line report/report.qtpl:146
	qw422016.N().S(fn())
//line report/report.qtpl:146
	qw422016.N().S(`
				});
    		});
    </script>
   	<div id="`)
//line report/report.qtpl:150
	qw422016.N().S(title)
//line report/report.qtpl:150
	qw422016.N().S(`" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
`)
//line report/report.qtpl:151
}

//line report/report.qtpl:151
func (p *Page) writebytesChart(qq422016 qtio422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:151
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:151
	p.streambytesChart(qw422016, title, fn)
//line report/report.qtpl:151
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:151
}

//line report/report.qtpl:151
func (p *Page) bytesChart(title string, fn seriesFunc) string {
//line report/report.qtpl:151
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:151
	p.writebytesChart(qb422016, title, fn)
//line report/report.qtpl:151
	qs422016 := string(qb422016.B)
//line report/report.qtpl:151
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:151
	return qs422016
//line report/report.qtpl:151
}

//line report/report.qtpl:153
func (p *Page) streampieChart(qw422016 *qt422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:153
	qw422016.N().S(`
	<script>
	$(function () {
    			$('#`)
//line report/report.qtpl:156
	qw422016.N().S(title)
//line report/report.qtpl:156
	qw422016.N().S(`').highcharts({
					chart: {
						plotBackgroundColor: null,
						plotBorderWidth: null,
						plotShadow: false,
						type: 'pie'
					},
					title: {
						text: '`)
//line report/report.qtpl:164
	qw422016.N().S(strings.Title(title))
//line report/report.qtpl:164
	qw422016.N().S(`',
					},
					 tooltip: {
						pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
					},
					plotOptions: {
						pie: {
							allowPointSelect: true,
							cursor: 'pointer',
							dataLabels: {
								enabled: false
							},
							showInLegend: true
						}
					},
					series: `)
//line report/report.qtpl:179
	qw422016.N().S(fn())
//line report/report.qtpl:179
	qw422016.N().S(`
				});
    		});
    </script>
   	<div id="`)
//line report/report.qtpl:183
	qw422016.N().S(title)
//line report/report.qtpl:183
	qw422016.N().S(`" style = "float: left; width:50%; height: 400px;"></div>
`)
//line report/report.qtpl:184
}

//line report/report.qtpl:184
func (p *Page) writepieChart(qq422016 qtio422016.Writer, title string, fn seriesFunc) {
//line report/report.qtpl:184
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:184
	p.streampieChart(qw422016, title, fn)
//line report/report.qtpl:184
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:184
}

//line report/report.qtpl:184
func (p *Page) pieChart(title string, fn seriesFunc) string {
//line report/report.qtpl:184
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:184
	p.writepieChart(qb422016, title, fn)
//line report/report.qtpl:184
	qs422016 := string(qb422016.B)
//line report/report.qtpl:184
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:184
	return qs422016
//line report/report.qtpl:184
}

//line report/report.qtpl:186
func (p *Page) streamconnectionSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:186
	qw422016.N().S(`
	[{
		name: 'Connections',
		data: [`)
//line report/report.qtpl:189
	qw422016.N().S(uint64SliceToString(p.Connections))
//line report/report.qtpl:189
	qw422016.N().S(`]
	}]
`)
//line report/report.qtpl:191
}

//line report/report.qtpl:191
func (p *Page) writeconnectionSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:191
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:191
	p.streamconnectionSeries(qw422016)
//line report/report.qtpl:191
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:191
}

//line report/report.qtpl:191
func (p *Page) connectionSeries() string {
//line report/report.qtpl:191
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:191
	p.writeconnectionSeries(qb422016)
//line report/report.qtpl:191
	qs422016 := string(qb422016.B)
//line report/report.qtpl:191
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:191
	return qs422016
//line report/report.qtpl:191
}

//line report/report.qtpl:193
func (p *Page) streamhasHeadersSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:193
	qw422016.N().S(`
	[{
		name: 'Has Headers',
		data: [`)
//line report/report.qtpl:196
	qw422016.N().S(uint64SliceToString(p.HasHeaders))
//line report/report.qtpl:196
	qw422016.N().S(`]
	}]
`)
//line report/report.qtpl:198
}

//line report/report.qtpl:198
func (p *Page) writehasHeadersSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:198
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:198
	p.streamhasHeadersSeries(qw422016)
//line report/report.qtpl:198
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:198
}

//line report/report.qtpl:198
func (p *Page) hasHeadersSeries() string {
//line report/report.qtpl:198
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:198
	p.writehasHeadersSeries(qb422016)
//line report/report.qtpl:198
	qs422016 := string(qb422016.B)
//line report/report.qtpl:198
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:198
	return qs422016
//line report/report.qtpl:198
}

//line report/report.qtpl:200
func (p *Page) streamqpsSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:200
	qw422016.N().S(`
	[{
		name: 'Load average',
		data: [`)
//line report/report.qtpl:203
	qw422016.N().S(uint64SliceToString(p.Qps))
//line report/report.qtpl:203
	qw422016.N().S(`]
	},
	{
		name: 'Req-per-second',
		data: [`)
//line report/report.qtpl:207
	qw422016.N().S(float64SliceToString(rate(p.RequestSum, p.Interval)))
//line report/report.qtpl:207
	qw422016.N().S(`]
	}]
`)
//line report/report.qtpl:209
}

//line report/report.qtpl:209
func (p *Page) writeqpsSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:209
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:209
	p.streamqpsSeries(qw422016)
//line report/report.qtpl:209
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:209
}

//line report/report.qtpl:209
func (p *Page) qpsSeries() string {
//line report/report.qtpl:209
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:209
	p.writeqpsSeries(qb422016)
//line report/report.qtpl:209
	qs422016 := string(qb422016.B)
//line report/report.qtpl:209
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:209
	return qs422016
//line report/report.qtpl:209
}

//line report/report.qtpl:211
func (p *Page) streamerrorSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:211
	qw422016.N().S(`
	[{
		name: 'Errors',
		data: [`)
//line report/report.qtpl:214
	qw422016.N().S(float64SliceToString(rate(p.Errors, p.Interval)))
//line report/report.qtpl:214
	qw422016.N().S(`]
	},{
		name: 'Timeouts',
		data: [`)
//line report/report.qtpl:217
	qw422016.N().S(float64SliceToString(rate(p.Timeouts, p.Interval)))
//line report/report.qtpl:217
	qw422016.N().S(`]
	}]
`)
//line report/report.qtpl:219
}

//line report/report.qtpl:219
func (p *Page) writeerrorSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:219
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:219
	p.streamerrorSeries(qw422016)
//line report/report.qtpl:219
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:219
}

//line report/report.qtpl:219
func (p *Page) errorSeries() string {
//line report/report.qtpl:219
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:219
	p.writeerrorSeries(qb422016)
//line report/report.qtpl:219
	qs422016 := string(qb422016.B)
//line report/report.qtpl:219
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:219
	return qs422016
//line report/report.qtpl:219
}

//line report/report.qtpl:222
func (p *Page) streamdurationSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:222
	qw422016.N().S(`[`)
//line report/report.qtpl:225
	var keys []float64
	for k := range p.RequestDuration {
		keys = append(keys, k)
	}
	sort.Float64s(keys)

//line report/report.qtpl:231
	for i, k := range keys {
//line report/report.qtpl:231
		qw422016.N().S(`{name: '`)
//line report/report.qtpl:233
		qw422016.N().F(k)
//line report/report.qtpl:233
		qw422016.N().S(`',data: [`)
//line report/report.qtpl:234
		qw422016.N().S(float64SliceToString(p.RequestDuration[k]))
//line report/report.qtpl:234
		qw422016.N().S(`],tooltip: {valueSuffix: ' s'}}`)
//line report/report.qtpl:237
		if i+1 < len(keys) {
//line report/report.qtpl:237
			qw422016.N().S(`,`)
//line report/report.qtpl:237
		}
//line report/report.qtpl:238
	}
//line report/report.qtpl:238
	qw422016.N().S(`]`)
//line report/report.qtpl:240
}

//line report/report.qtpl:240
func (p *Page) writedurationSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:240
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:240
	p.streamdurationSeries(qw422016)
//line report/report.qtpl:240
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:240
}

//line report/report.qtpl:240
func (p *Page) durationSeries() string {
//line report/report.qtpl:240
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:240
	p.writedurationSeries(qb422016)
//line report/report.qtpl:240
	qs422016 := string(qb422016.B)
//line report/report.qtpl:240
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:240
	return qs422016
//line report/report.qtpl:240
}

//line report/report.qtpl:244
func (p *Page) streambytesSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:244
	qw422016.N().S(`[{name: 'BytesWritten',data: [`)
//line report/report.qtpl:247
	qw422016.N().S(float64SliceToString(rate(p.BytesWritten, p.Interval)))
//line report/report.qtpl:247
	qw422016.N().S(`]},{name: 'BytesRead',data: [`)
//line report/report.qtpl:250
	qw422016.N().S(float64SliceToString(rate(p.BytesRead, p.Interval)))
//line report/report.qtpl:250
	qw422016.N().S(`]}]`)
//line report/report.qtpl:252
}

//line report/report.qtpl:252
func (p *Page) writebytesSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:252
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:252
	p.streambytesSeries(qw422016)
//line report/report.qtpl:252
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:252
}

//line report/report.qtpl:252
func (p *Page) bytesSeries() string {
//line report/report.qtpl:252
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:252
	p.writebytesSeries(qb422016)
//line report/report.qtpl:252
	qs422016 := string(qb422016.B)
//line report/report.qtpl:252
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:252
	return qs422016
//line report/report.qtpl:252
}

//line report/report.qtpl:256
func (p *Page) streamstatusCodesSeries(qw422016 *qt422016.Writer) {
//line report/report.qtpl:256
	qw422016.N().S(`[{name: 'Status codes',colorByPoint: true,data: [`)
//line report/report.qtpl:261
	for k, v := range p.StatusCodes {
//line report/report.qtpl:261
		qw422016.N().S(`{name: '`)
//line report/report.qtpl:263
		qw422016.N().S(k)
//line report/report.qtpl:263
		qw422016.N().S(`',y:`)
//line report/report.qtpl:264
		qw422016.N().FPrec(v, 2)
//line report/report.qtpl:264
		qw422016.N().S(`},`)
//line report/report.qtpl:266
	}
//line report/report.qtpl:266
	qw422016.N().S(`]}]`)
//line report/report.qtpl:269
}

//line report/report.qtpl:269
func (p *Page) writestatusCodesSeries(qq422016 qtio422016.Writer) {
//line report/report.qtpl:269
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:269
	p.streamstatusCodesSeries(qw422016)
//line report/report.qtpl:269
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:269
}

//line report/report.qtpl:269
func (p *Page) statusCodesSeries() string {
//line report/report.qtpl:269
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:269
	p.writestatusCodesSeries(qb422016)
//line report/report.qtpl:269
	qs422016 := string(qb422016.B)
//line report/report.qtpl:269
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:269
	return qs422016
//line report/report.qtpl:269
}

//line report/report.qtpl:272
func (p *Page) streamerrorMessagesTable(qw422016 *qt422016.Writer) {
//line report/report.qtpl:272
	qw422016.N().S(`
	<div style = "float: left; width:50%; height: 400px;">
	 <!-- IE < 10 does not like giving a tbody a height.  The workaround here applies the scrolling to a wrapped <div>. -->
	 <!--[if lte IE 9]>
	 <div class="old_ie_wrapper">
	 <!--<![endif]-->
	 <p class = "title">Error distribution</p>
	 <table class="fixed_headers">
		 <thead>
			<tr>
				<td>Count</td>
				<td>Message</td>
			</tr>
		 </thead>
		 <tbody>
			`)
//line report/report.qtpl:287
	for k, v := range p.ErrorMessages {
//line report/report.qtpl:287
		qw422016.N().S(`
				<tr>
					<td>`)
//line report/report.qtpl:289
		qw422016.N().D(v)
//line report/report.qtpl:289
		qw422016.N().S(`</td>
					<td>`)
//line report/report.qtpl:290
		qw422016.N().S(k)
//line report/report.qtpl:290
		qw422016.N().S(`</td>
				</tr>
			`)
//line report/report.qtpl:292
	}
//line report/report.qtpl:292
	qw422016.N().S(`
			`)
//line report/report.qtpl:293
	if len(p.ErrorMessages) == 0 {
//line report/report.qtpl:293
		qw422016.N().S(`
			<tr>
				<td></td>
				<td>No error messages</td>
			</tr>
            `)
//line report/report.qtpl:298
	}
//line report/report.qtpl:298
	qw422016.N().S(`
		 </tbody>
	 </table>
	 <!--[if lte IE 9]>
     </div>
     <!--<![endif]-->
     </div>
`)
//line report/report.qtpl:305
}

//line report/report.qtpl:305
func (p *Page) writeerrorMessagesTable(qq422016 qtio422016.Writer) {
//line report/report.qtpl:305
	qw422016 := qt422016.AcquireWriter(qq422016)
//line report/report.qtpl:305
	p.streamerrorMessagesTable(qw422016)
//line report/report.qtpl:305
	qt422016.ReleaseWriter(qw422016)
//line report/report.qtpl:305
}

//line report/report.qtpl:305
func (p *Page) errorMessagesTable() string {
//line report/report.qtpl:305
	qb422016 := qt422016.AcquireByteBuffer()
//line report/report.qtpl:305
	p.writeerrorMessagesTable(qb422016)
//line report/report.qtpl:305
	qs422016 := string(qb422016.B)
//line report/report.qtpl:305
	qt422016.ReleaseByteBuffer(qb422016)
//line report/report.qtpl:305
	return qs422016
//line report/report.qtpl:305
}
